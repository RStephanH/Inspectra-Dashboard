import type { Vulnerability } from '@/lib/types';
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from '@/components/ui/table';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { SeverityBadge } from './SeverityBadge';
import { ScrollArea, ScrollBar } from "@/components/ui/scroll-area";

interface VulnerabilityReportProps {
  vulnerabilities: Vulnerability[];
  onViewRemediation: (vulnerability: Vulnerability) => void;
}

export function VulnerabilityReport({ vulnerabilities, onViewRemediation }: VulnerabilityReportProps) {
  if (!vulnerabilities || vulnerabilities.length === 0) {
    return null;
  }

  return (
    <Card className="shadow-lg">
      <CardHeader>
        <CardTitle className="text-2xl">Vulnerability Report</CardTitle>
        <CardDescription>
          Found {vulnerabilities.length} {vulnerabilities.length === 1 ? "vulnerability" : "vulnerabilities"}.
        </CardDescription>
      </CardHeader>
      <CardContent>
        <ScrollArea className="w-full whitespace-nowrap rounded-md border">
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead className="w-[150px]">Severity</TableHead>
                <TableHead>Type</TableHead>
                <TableHead>Description</TableHead>
                <TableHead>Resource</TableHead>
                <TableHead className="text-right w-[180px]">Actions</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {vulnerabilities.map((vuln) => (
                <TableRow key={vuln.id}>
                  <TableCell>
                    <SeverityBadge severity={vuln.severity} />
                  </TableCell>
                  <TableCell className="font-medium">{vuln.type}</TableCell>
                  <TableCell className="max-w-sm truncate hover:whitespace-normal" title={vuln.description}>
                    {vuln.description}
                  </TableCell>
                  <TableCell className="font-mono text-sm max-w-xs truncate hover:whitespace-normal" title={vuln.resource}>
                    {vuln.resource}
                  </TableCell>
                  <TableCell className="text-right">
                    <Button variant="outline" size="sm" onClick={() => onViewRemediation(vuln)}>
                      View Remediation
                    </Button>
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
          <ScrollBar orientation="horizontal" />
        </ScrollArea>
      </CardContent>
    </Card>
  );
}
